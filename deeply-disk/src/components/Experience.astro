---
const experienceItems = [
  {
    company: 'ALLO Communications',
    role: 'Network Delivery Technician',
    period: 'Apr 2022 - Present',
    logo: '/images/allo_logo.jpg',
    tasks: [
      'Collaborated with the Network Engineering team on equipment replacements, upgrades, and initial configurations.',
      'Provided support for Network or Splice team outages and repairs, ensuring minimal service disruption.',
      'Executed installations, including Network Interface Device (NID) setups, switches, routers, and ONT.',
      'Designed and qualified GPON turn-ups for splitters in the Northern CO market.',
      'Performed overnight maintenance to maintain the quality of network services at data centers.',
      'Traveled across Northern Colorado to maintain Central Offices.'
    ]
  },
  {
    company: 'Freelance',
    role: 'Full-Stack Web Developer',
    period: 'June 2023 - Present',
    logo: '/images/itsme_lol.webp',
    tasks: [
      'Developed and maintained responsive websites for small businesses using HTML, CSS, JavaScript, and React.',
      'Implemented e-commerce solutions for clients, increasing online sales by an average of 30%.',
      'Created custom web applications, improving client workflows and increasing efficiency.',
      'Provided SEO optimization and digital marketing strategies to enhance client visibility online.',
      'Worked closely with clients to understand their needs and deliver tailored solutions.'
    ]
  },
  {
    company: 'Vestas Blades America',
    role: 'Wind Turbine Energy',
    period: 'Feb 2019 - Apr 2022',
    logo: '/images/vestas_logo.png',
    tasks: [
      'Oversaw logistical processes to ensure the safe transportation of oversized wind turbines.',
      'Assured the acquisition, storage, and transportation of resources to their destinations.',
      'Held professional crane certifications in compliance with OSHA standards.'
    ]
  }
];
---

<section id="experience" class="section">
  <h2 class="section-title">Experience</h2>
  <div class="content">
    {experienceItems.map(item => (
      <div class="experience-item">
        <div class="experience-header">
          <img src={item.logo} alt={`${item.company} logo`} class="company-logo" />
          <div>
            <h3>{item.company}</h3>
            <h4>{item.role}</h4>
            <p>{item.period}</p>
          </div>
        </div>
        <ul>
          {item.tasks.map(task => (
            <li>{task}</li>
          ))}
        </ul>
      </div>
    ))}
  </div>
  <div class="resume-container">
    <div class="arrows">
      <span class="arrow"></span>
      <span class="arrow"></span>
    </div>
    <a href="/files/resume.pdf" class="resume-button" download>Download My Resume</a> <!--put in public folder -->
  </div>
</section>

<style>
.section {
    padding: 4rem 2rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 15px;
    margin-bottom: 2rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    opacity: 0;
    transform: translateY(50px);
    visibility: hidden;
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    will-change: opacity, transform;
}

.section.active {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
}

.section-title {
    font-family: 'Roboto Mono', monospace;
    font-size: 3rem;
    margin-bottom: 1.5rem;
    color: #ffffff;
    position: relative;
}

.section-title::after {
    content: '';
    display: block;
    width: 60px;
    height: 4px;
    background: #00d4ff;
    position: absolute;
    bottom: -10px;
    left: 0;
}

.content {
    display: flex;
    flex-direction: column;
    gap: 20px;
    opacity: 0;
    transition: opacity 0.8s ease-in-out;
}

.section.active .content {
    opacity: 1;
}

.experience-item {
    background-color: rgba(255, 255, 255, 0.1);
    padding: 25px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    backdrop-filter: blur(10px);
    position: relative;
    overflow: hidden;
}

.experience-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.experience-header {
    display: flex;
    align-items: center;
    gap: 20px;
    margin-bottom: 15px;
}

.company-logo {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.experience-header h3 {
    margin: 0;
    font-size: 1.5rem;
    color: #ffffff;
}

.experience-header h4 {
    margin: 0;
    font-size: 1.2rem;
    color: #cccccc;
}

.experience-header p {
    margin: 0;
    font-size: 1rem;
    color: #999999;
}

.experience-item ul {
    padding-left: 20px;
    list-style-type: disc;
}

.experience-item ul li {
    margin-bottom: 10px;
    font-size: 1.1rem;
    color: #f0f0f0;
}

.resume-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 2rem;
    position: relative;
}

.resume-button {
    display: inline-block;
    margin-top: 2rem;
    padding: 1rem 2rem;
    font-size: 1.2rem;
    color: #ffffff;
    background-color: #000000;
    border-radius: 50px;
    text-decoration: none;
    transition: background-color 0.3s ease, transform 0.3s ease;
    animation: pulse 2s infinite;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.resume-button:hover {
    color: #000000;
    background-color: #5af0b4;
    transform: scale(1.05);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

.arrows {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 1rem;
    position: relative;
}

.arrow {
    width: 20px;
    height: 20px;
    border-right: 4px solid #b4aeae;
    border-bottom: 4px solid #b4aeae;
    margin: 5px 0;
    transform: rotate(45deg);
    animation: arrowBounce 1s infinite;
}

.arrow:nth-child(2) {
    animation-delay: 0.2s;
}

.arrow:nth-child(3) {
    animation-delay: 0.4s;
}

@keyframes arrowBounce {
    0% {
        transform: translateY(0) rotate(45deg);
    }
    50% {
        transform: translateY(-10px) rotate(45deg);
    }
    100% {
        transform: translateY(0) rotate(45deg);
    }
}


@media (max-width: 768px) {
    .section {
        padding: 1rem;
        font-size: 18px;
    }

    .section-title {
        font-size: 2.5rem;
    }

    .experience-item h3 {
        font-size: 1.5rem;
    }

    .experience-item h4 {
        font-size: 1.2rem;
    }

    .experience-item p,
    .experience-item ul li {
        font-size: 1rem;
    }

    .company-logo {
        width: 40px;
        height: 40px;
    }

    .resume-button {
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
    }
}

@media (max-width: 480px) {
    .section {
        padding: 0.5rem;
        font-size: 16px;
    }

    .section-title {
        font-size: 2rem;
    }

    .experience-item h3 {
        font-size: 1.2rem;
    }

    .experience-item h4 {
        font-size: 1rem;
    }

    .experience-item p,
    .experience-item ul li {
        font-size: 0.9rem;
    }

    .company-logo {
        width: 30px;
        height: 30px;
    }

    .resume-button {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }
}

/* Blob effect */
#experience::before, #experience::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    height: 400px;
    background: linear-gradient(45deg, #301f47, #090979, #00d4ff, #ff004d);
    filter: blur(80px);
    z-index: -1;
    transform: translate(-50%, -50%);
    animation: rotate 12s infinite linear;
}

#experience::after {
    width: 600px;
    height: 600px;
    animation-duration: 20s;
}

@keyframes rotate {
    from {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    to {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}
</style>

<script>
  if (typeof window !== "undefined") {
    window.addEventListener("DOMContentLoaded", () => {
      const sections = document.querySelectorAll('.section');
      const options = {
        threshold: 0.2
      };

      const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('active');
            observer.unobserve(entry.target);
          }
        });
      }, options);

      sections.forEach(section => {
        observer.observe(section);
      });
    });
  }
</script>
